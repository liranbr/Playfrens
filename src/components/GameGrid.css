.games-grid-container {
    width: 100%;
    overflow-y: auto;
    scrollbar-gutter: stable;
}

.games-grid {
    width: 100%;
    display: grid;
    grid-auto-flow: row;
    justify-content: space-between;
    column-gap: 20px;
    /* column-gap is the minimum, actual gap determined by space-between */
    row-gap: 30px;
    padding: 30px;
    grid-template-columns: repeat(auto-fit, var(--game-card-width));
}

.game-card {
    position: relative;
    overflow: hidden; /* for the overlay */
    width: 100%;
    aspect-ratio: 1 / 1.5;
    margin: 0;
    padding: 0;
    border: 0;
    outline: 4px solid transparent;
    border-radius: var(--game-card-border-radius);
    background-color: transparent;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.9);
    transition:
        0.3s ease,
        filter 0.3s ease 0.1s;

    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: inherit;
    }

    .game-card-title-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to bottom, rgba(0, 0, 0, 0.66), rgba(0, 0, 0, 0));
        color: #fff;
        padding: 10px;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        font-family: sans-serif;
        opacity: 0;
        transition: 0.3s ease;
        overflow: hidden;
        text-wrap: nowrap;
        text-overflow: ellipsis;
        -webkit-text-stroke: 4px rgba(0, 0, 0, 0.66);
        paint-order: stroke fill;
        text-rendering: optimizeLegibility;
    }

    &:hover {
        transform: scale(1.05);
        box-shadow: 0 12px 16px rgba(0, 0, 0, 0.6);
        z-index: 1;

        .game-card-title-overlay {
            transform: scale(1.01); /* reduces flicker on transition end */
            opacity: 1;
        }
    }
    &.highlight {
        outline: 4px solid var(--pf-border-color-primary);
        transition: outline 0.3s ease 0.5s; /* delay on appearance, not disappearance */
    }
    &.darken {
        filter: brightness(0.4) grayscale(0.5);
        transition: filter 0.3s ease 0.5s; /* longer delay on appearance */
    }
}
